name: Media Server CI/CD
on:
  push:
    branches:
      - develop
    paths:
      - 'apps/media/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: media-camon
      MEDIA_PORT: 3001
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_MEDIA: ${{ secrets.REDIS_MEDIA }}
      ANNOUNCED_IP: ${{ secrets.ANNOUNCED_IP }}
      API_SERVER_URL: ${{ secrets.API_SERVER_URL }}
      HTTP_TIMEOUT: ${{ secrets.HTTP_TIMEOUT }}
      RECORD_SERVER_URL: ${{ secrets.RECORD_SERVER_URL }}
      SERVER_PRIVATE_IP: ${{ secrets.SERVER_PRIVATE_IP }}
      PUBLIC_RECORD_SERVER_URL: ${{ secrets.PUBLIC_RECORD_SERVER_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Ncloud Container Registry
        env:
          USERNAME: ${{ secrets.NCLOUD_ACCESS_KEY }}
          PASSWORD: ${{ secrets.NCLOUD_SECRET_KEY }}
          REGISTRY_URL: ${{ secrets.NCLOUD_REGISTRY_URL }}
        run: |
          echo "$PASSWORD" | docker login -u "$USERNAME" "$REGISTRY_URL" --password-stdin

      - name: Build Docker image
        run: |
          docker build \
          --cache-from=${{ secrets.NCLOUD_REGISTRY_URL }}/$IMAGE_NAME:latest \
          -f ./apps/media/Dockerfile \
          -t ${{ secrets.NCLOUD_REGISTRY_URL }}/$IMAGE_NAME:latest \
          --build-arg MEDIA_PORT=$MEDIA_PORT \
          --build-arg REDIS_HOST=$REDIS_HOST \
          --build-arg REDIS_PORT=$REDIS_PORT \
          --build-arg REDIS_MEDIA=$REDIS_MEDIA \
          --build-arg ANNOUNCED_IP=$ANNOUNCED_IP \
          --build-arg API_SERVER_URL=$API_SERVER_URL \
          --build-arg HTTP_TIMEOUT=$HTTP_TIMEOUT \
          --build-arg RECORD_SERVER_URL=$RECORD_SERVER_URL \
          --build-arg SERVER_PRIVATE_IP=$SERVER_PRIVATE_IP \
          --build-arg PUBLIC_RECORD_SERVER_URL=$PUBLIC_RECORD_SERVER_URL \
          .         

      - name: Push to Ncloud Container Registry
        run: |
          docker push ${{ secrets.NCLOUD_REGISTRY_URL }}/$IMAGE_NAME:latest

  deploy-and-run:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout for docker-compose
        uses: actions/checkout@v2

      - name: Copy docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_SERVER_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.SERVER_USER }}/camon"

      - name: SSH and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_SERVER_KEY }}
          port: 22
          envs: MEDIA_PORT,REDIS_HOST,REDIS_PORT,REDIS_MEDIA,ANNOUNCED_IP,API_SERVER_URL,HTTP_TIMEOUT,RECORD_SERVER_URL,SERVER_PRIVATE_IP,PUBLIC_RECORD_SERVER_URL
          script: |
            cd /home/${{ secrets.SERVER_USER }}/camon
            sudo lsof -i :3001
            sudo lsof -i :30000-31000
            sudo docker login -u ${{secrets.NCLOUD_ACCESS_KEY}} -p ${{ secrets.NCLOUD_SECRET_KEY }} ${{ secrets.NCLOUD_REGISTRY_URL }}

            echo "API_SERVER_URL=http://api:3000" >> .env
            echo "HTTP_TIMEOUT=5000" >> .env
            echo "RECORD_SERVER_URL=http://record:3003" >> .env
            echo "SERVER_PRIVATE_IP=record" >> .env
            echo "PUBLIC_RECORD_SERVER_URL=https://record.cam-on.site" >> .env

            sudo docker stop media-camon || true
            sudo docker rm media-camon || true
            sudo docker rmi ${{ secrets.NCLOUD_REGISTRY_URL }}/media-camon:latest || true

            sudo docker pull ${{ secrets.NCLOUD_REGISTRY_URL }}/media-camon:latest
            sudo docker-compose up -d media
            sudo docker image prune -f

      - name: Check container status
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_SERVER_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SERVER_USER }}/camon
            sudo docker-compose ps media
            sudo docker-compose logs --tail=100 media